// Copyright (C) 2009-present, Panagiotis Christopoulos Charitos and contributors.
// All rights reserved.
// Code licensed under the BSD License.
// http://www.anki3d.org/LICENSE

#pragma anki technique comp

#include <AnKi/Shaders/PackFunctions.hlsl>
#include <AnKi/Shaders/LightFunctions.hlsl>

SamplerState g_nearestAnyClampSampler : register(s0);
TextureCube<Vec4> g_gbufferTex[3u] : register(t0);
StructuredBuffer<Vec4> g_irradianceDice : register(t3);
RWTexture2D<Vec4> g_cubeTex[6u] : register(u0); // RWTexture2D because there is no RWTextureCube

[numthreads(8, 8, 6)] void main(UVec3 svDispatchThreadId : SV_DISPATCHTHREADID, UVec3 svGroupThreadId : SV_GROUPTHREADID)
{
	const U32 faceIdx = svGroupThreadId.z;

	// Compute the UVs to read the gbuffer from
	UVec2 cubeSizeu;
	g_cubeTex[0].GetDimensions(cubeSizeu.x, cubeSizeu.y);
	const Vec2 cubeSize = Vec2(cubeSizeu);
	const UVec2 dispatchThreadId = min(svDispatchThreadId.xy, cubeSizeu - 1u);

	const Vec2 uv = (Vec2(dispatchThreadId) + 0.5) / Vec2(cubeSize);
	const Vec3 sampleUv = getCubemapDirection(uv, faceIdx);

	// Read the gbuffer
	GbufferInfo<F32> gbuffer = (GbufferInfo<F32>)0;
	unpackGBufferNoVelocity(g_gbufferTex[0u].SampleLevel(g_nearestAnyClampSampler, sampleUv, 0.0),
							g_gbufferTex[1u].SampleLevel(g_nearestAnyClampSampler, sampleUv, 0.0),
							g_gbufferTex[2u].SampleLevel(g_nearestAnyClampSampler, sampleUv, 0.0), gbuffer);

	// Sample
	const RVec3 irradiance =
		sampleAmbientDice<RF32>(g_irradianceDice[0u].xyz, g_irradianceDice[1u].xyz, g_irradianceDice[2u].xyz, g_irradianceDice[3u].xyz,
								g_irradianceDice[4u].xyz, g_irradianceDice[5u].xyz, gbuffer.m_normal * Vec3(1.0, 1.0, -1.0));

	// Compute the indirect term
	const RVec3 indirect = gbuffer.m_diffuse * irradiance;

	// Read the prev color and apply indirect
	const RVec3 prevColor = g_cubeTex[faceIdx][dispatchThreadId].xyz;
	const RVec3 prevColorWithIndirectDiffuse = prevColor + gbuffer.m_diffuse * indirect;

	// Barrier just in case
	GroupMemoryBarrierWithGroupSync();

	// Write it back
	g_cubeTex[faceIdx][dispatchThreadId] = RVec4(prevColorWithIndirectDiffuse, 0.0);
}
