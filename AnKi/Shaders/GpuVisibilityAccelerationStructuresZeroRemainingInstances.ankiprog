// Copyright (C) 2009-present, Panagiotis Christopoulos Charitos and contributors.
// All rights reserved.
// Code licensed under the BSD License.
// http://www.anki3d.org/LICENSE

#pragma anki technique comp

#include <AnKi/Shaders/Common.hlsl>
#include <AnKi/Shaders/Include/GpuSceneTypes.h>

StructuredBuffer<U32> g_visibleRenderableIndices : register(t0); // 1st element is the count
RWStructuredBuffer<AccelerationStructureInstance> g_instances : register(u0);

#define NUMTHREADS 64

[numthreads(NUMTHREADS, 1, 1)] void main(U32 svDispatchThreadId : SV_DISPATCHTHREADID)
{
	const U32 visibleInstances = g_visibleRenderableIndices[0];

	const U32 maxInstances = getStructuredBufferElementCount(g_instances);

	ANKI_ASSERT(maxInstances >= visibleInstances);
	const U32 remainingInstances = maxInstances - visibleInstances;

	if(svDispatchThreadId < remainingInstances)
	{
		g_instances[visibleInstances + svDispatchThreadId] = (AccelerationStructureInstance)0;
	}
}
